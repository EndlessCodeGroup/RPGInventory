import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'ru.endlesscode.bukkitgradle' version '0.10.0'
    id 'com.github.ben-manes.versions' version "0.39.0"
    id 'jacoco'
}

group = 'ru.endlesscode.rpginventory'
version = pluginVersion
description = pluginDesc

bukkit {
    apiVersion = '1.17.1'

    meta {
        name.set("RPGInventory")
        main.set("${group}.RPGInventoryPlugin")
        apiVersion.set("1.14")
        authors.set(["osipxd", "EndlessCode Group"])
    }

    server {
        core = "paper"
        eula = true
    }
}

// Replace sentry credentials in code
def processSources = tasks.register("processSource", Sync) {
    // The key should be declared in ~/.gradle/gradle.properties
    def dsn = findProperty("rpginvSentryDsn") ?: ""

    from(sourceSets.main.java)
    inputs.property("dsn", dsn)
    filter(ReplaceTokens, tokens: [sentry_dsn: dsn])
    into("$buildDir/src")
}

compileJava {
    source = processSources.get().outputs
}

repositories {
    mavenCentral()
    spigot()
    dmulloy2()
    md5()
    placeholderapi()
    jitpack()

    // You should configure credentials for this repo
    def myPetRepo = maven {
        name = "githubPackages"
        url = uri("https://maven.pkg.github.com/MyPetORG/MyPet")
        credentials(PasswordCredentials)
    }

    exclusiveContent {
        forRepositories(myPetRepo)
        filter { includeGroup("de.keyle") }
    }
}

shadowJar {
    dependencies {
        exclude(dependency("com.google.code.gson:gson:.*"))
        exclude(dependency("org.jetbrains:annotations:.*"))
    }

    exclude("DebugProbesKt.bin")
    exclude("META-INF/proguard/**")
    exclude("META-INF/native-image/**")

    minimize()

    def shadowPackage = "shade.ru.endlesscode.rpginventory"
    relocate "com.comphenix.packetwrapper", "${shadowPackage}.packetwrapper"

    // inspector
    relocate "ru.endlesscode.inspector", "${shadowPackage}.inspector"
    relocate "kotlinx", "${shadowPackage}.kotlinx"
    relocate "kotlin", "${shadowPackage}.kotlin"

    // inspector-sentry-reporter
    relocate "io.sentry", "${shadowPackage}.sentry"

    // bstats
    relocate "org.bstats", "${shadowPackage}.bstats"
}

def inspectorVersion = "0.12.1"

dependencies {
    compileOnly(spigotApi())
    compileOnly('com.github.MilkBowl:VaultAPI:1.7.1') {
        exclude group: 'org.bukkit'
    }
    compileOnly('com.comphenix.protocol:ProtocolLib:4.7.0')
    compileOnly('org.jetbrains:annotations:22.0.0')
    compileOnly('me.clip:placeholderapi:2.10.10')
    compileOnly('de.keyle:mypet:3.12-SNAPSHOT')
    compileOnly('ru.endlesscode.mimic:mimic-bukkit-api:0.6.1')
    implementation("ru.endlesscode.inspector:inspector-bukkit:$inspectorVersion")
    implementation("ru.endlesscode.inspector:inspector-sentry-reporter:$inspectorVersion")
    implementation("ru.endlesscode.inspector:sentry-bukkit:$inspectorVersion")
    implementation('com.comphenix.packetwrapper:PacketWrapper:1.13-R0.1-SNAPSHOT')
    implementation('org.bstats:bstats-bukkit:2.2.1')
    testImplementation('junit:junit:4.12')
    testImplementation('org.mockito:mockito-core:3.12.1')
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

// Add custom tasks
tasks.assemble.dependsOn tasks.shadowJar
tasks.check.dependsOn tasks.jacocoTestReport

// Add ProGuard minimization task
// TODO: minimized Jar not works, fix it
//apply(from: file("proguard.gradle"))
//apply(from: file("gradle/publish.gradle"))
